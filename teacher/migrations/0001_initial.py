# Generated by Django 5.2 on 2025-05-13 09:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('department', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_code', models.CharField(blank=True, max_length=50, verbose_name='Staff Code')),
                ('teacher_role', models.CharField(choices=[('HOD', 'Head of Department'), ('Professor', 'Professor'), ('Professor and HOD', 'Professor and HOD'), ('Professor and Dean', 'Professor and Dean'), ('Associate Professor', 'Associate Professor'), ('Assistant Professor', 'Assistant Professor'), ('Assistant Professor SG', 'Assistant Professor (SG)'), ('Assistant Professor SS', 'Assistant Professor (SS)'), ('AP SS Coordin PG Studies', 'AP SS Coordinator PG Studies'), ('Adjunct Faculty', 'Adjunct Faculty'), ('Professor of Practice', 'Professor of Practice'), ('Professor And Academic Head', 'Professor and Academic Head'), ('Professor and Director - Alumni Affairs', 'Professor and Director - Alumni Affairs'), ('Director And HOD', 'Director and HOD'), ('System Administrator', 'System Administrator'), ('AOP And HOD', 'AOP and HOD'), ('Professor and Dean (Academics)', 'Professor and Dean (Academics)'), ('Director -Startup HQ', 'Director - Startup HQ'), ('Assistant Professor Cum CSRC Coordinator', 'Assistant Professor Cum CSRC Coordinator'), ('Teaching Assistant', 'Teaching Assistant'), ('Assistant Professor POP', 'Assistant Professor POP'), ('Professor and PG Director', 'Professor and PG Director'), ('Professor and Research Head', 'Professor and Research Head'), ('Professor - Postgraduate Studies', 'Professor - Postgraduate Studies'), ('Professor and Admin Office', 'Professor and Admin Office'), ('Dean Student Affairs', 'Dean Student Affairs'), ('AOP Academic Head', 'AOP Academic Head'), ('Professor and Controller of Examinations', 'Professor and Controller of Examinations'), ('Principal and Professor', 'Principal and Professor'), ('Selection Grade Lecturer', 'Selection Grade Lecturer'), ('Assistant Professor - Product Associate', 'Assistant Professor - Product Associate'), ('Director - Research & Publications', 'Director - Research & Publications'), ('Vice Principal', 'Vice Principal'), ('Physical Director', 'Physical Director'), ('Industry Professional', 'Industry Professional')], default='Professor', max_length=100, verbose_name='Teacher Role')),
                ('teacher_specialisation', models.CharField(blank=True, max_length=100, verbose_name='Specialisation')),
                ('teacher_working_hours', models.IntegerField(default=21, verbose_name='Working Hour')),
                ('availability_type', models.CharField(choices=[('regular', 'Regular (All Working Days)'), ('limited', 'Limited (Specific Days/Times)')], default='regular', max_length=20, verbose_name='Availability Type')),
                ('is_industry_professional', models.BooleanField(default=False, verbose_name='Industry Professional')),
                ('resignation_status', models.CharField(choices=[('active', 'Active'), ('resigning', 'Resigning/Notice Period'), ('resigned', 'Resigned')], default='active', max_length=20, verbose_name='Resignation Status')),
                ('resignation_date', models.DateField(blank=True, null=True, verbose_name='Resignation Date')),
                ('is_placeholder', models.BooleanField(default=False, help_text='Placeholder for future recruitment', verbose_name='Is Placeholder')),
                ('placeholder_description', models.TextField(blank=True, help_text='Requirements for the position', verbose_name='Placeholder Description')),
                ('dept_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='department_teachers', to='department.department')),
                ('teacher_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlaceholderProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Placeholders',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('teacher.teacher',),
        ),
        migrations.CreateModel(
            name='TeacherResigingProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Resigning Teacher',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('teacher.teacher',),
        ),
        migrations.CreateModel(
            name='TeacherAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], verbose_name='Day of Week')),
                ('start_time', models.TimeField(verbose_name='Start Time')),
                ('end_time', models.TimeField(verbose_name='End Time')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_slots', to='teacher.teacher')),
            ],
            options={
                'verbose_name': 'Teacher Availability',
                'verbose_name_plural': 'Teacher Availabilities',
                'ordering': ['day_of_week', 'start_time'],
                'constraints': [models.UniqueConstraint(fields=('teacher', 'day_of_week', 'start_time', 'end_time'), name='unique_teacher_availability_slot')],
            },
        ),
    ]
